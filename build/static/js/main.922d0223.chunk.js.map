{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","styles","section","Statistics","good","bad","neutral","total","countPositiveFeedbackPercentage","list","item","FeedbackOptions","options","onLeaveFeedback","StyleSheet","buttonsList","map","option","type","name","onClick","btn","Notification","message","notification","App","state","countFeedbackHandler","event","currentTarget","setState","prevState","countTotalFeedback","totalFeedback","positiveFeedback","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,mBCAzDD,EAAOC,QAAU,CAAC,aAAe,qC,4JCUlBC,EARC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,mBAAGC,UAAWC,IAAOC,QAArB,SAA+BJ,IAC9BC,M,gBCOEI,EAXI,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,IAAKC,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,gCAC7C,OACI,qBAAIR,UAAWC,IAAOQ,KAAtB,UACI,qBAAIT,UAAWC,IAAOS,KAAtB,mBAAmCN,KACnC,qBAAIJ,UAAWC,IAAOS,KAAtB,sBAAsCJ,KACtC,qBAAIN,UAAWC,IAAOS,KAAtB,kBAAkCL,KAClC,qBAAIL,UAAWC,IAAOS,KAAtB,oBAAoCH,KACpC,qBAAIP,UAAWC,IAAOS,KAAtB,gCAAgDF,EAAhD,W,wBCWGG,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,qBAAKb,UAAWc,WAAWC,YAA3B,SACIH,EAAQI,KAAI,SAAAC,GAAM,OACd,wBACIC,KAAK,SAELC,KAAMF,EACNG,QAASP,EACTb,UAAWC,IAAOoB,IALtB,SAMKJ,GAJIA,S,iBCDVK,EALM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,mBAAGvB,UAAWC,IAAOuB,aAArB,SAAoCD,KCyD7BE,E,4MAtDbC,MAAQ,CACNtB,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGPsB,qBAAuB,SAAAC,GACrB,IAAQT,EAASS,EAAMC,cAAfV,KAER,EAAKW,UAAS,SAAAC,GAAS,sBACpBZ,EAAOY,EAAUZ,GAAQ,O,EAI9Ba,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQtB,KAAR,EAAcE,QAAd,EAAuBD,K,EAGzBG,gCAAkC,WAChC,IAAIyB,EAAgB,EAAKD,qBACrBE,EAAsC,IAAlB,EAAKR,MAAMtB,KAAc6B,EACjD,OAAyB,IAAlBA,EAAsBE,KAAKC,MAAMF,GAAoB,G,4CAI9D,WACE,MAA+BG,KAAKX,MAA5BtB,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASD,EAAvB,EAAuBA,IACjBE,EAAQ8B,KAAKL,qBACbxB,EAAkC6B,KAAK7B,kCAC7C,OACE,gCACE,cAAC,EAAD,CAASV,MAAM,wBAAf,SACE,cAAC,EAAD,CACEc,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBwB,KAAKV,yBAG1B,cAAC,EAAD,CAAS7B,MAAM,aAAf,SACGS,EACE,cAAC,EAAD,CACCH,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOA,EACPC,gCAAiCA,IAElC,cAAC,EAAD,CAAce,QAAQ,+B,GA/CjBe,a,MCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BhD,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,gC","file":"static/js/main.922d0223.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1WpMP\",\"item\":\"Statistics_item__1LbYr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__BB0G4\"};","import styles from './Section.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <p className={styles.section}>{title}</p>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}","import styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Statistics = ({ good, bad, neutral, total, countPositiveFeedbackPercentage }) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            <li className={styles.item}>Good: {good}</li>\r\n            <li className={styles.item}>Neutral: {neutral}</li>\r\n            <li className={styles.item}>Bad: {bad}</li>\r\n            <li className={styles.item}>Total: {total}</li>\r\n            <li className={styles.item}>Positive feedback: {countPositiveFeedbackPercentage}%</li>\r\n        </ul>\r\n    )\r\n}\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    countPositiveFeedbackPercentage: PropTypes.func.isRequired\r\n}","import styles from \"./FeedbackOptions.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <div className={StyleSheet.buttonsList}>{\r\n            options.map(option => (\r\n                <button\r\n                    type=\"button\"\r\n                    key={option}\r\n                    name={option}\r\n                    onClick={onLeaveFeedback}\r\n                    className={styles.btn}>\r\n                    {option}\r\n                </button>\r\n            ))\r\n        }\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\n","import styles from \"./Notification.module.css\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p className={styles.notification}>{message}</p>\r\n    )\r\n};\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Section from \"./components/Section/Section.js\"\r\nimport Statistics from './components/Statistics/Statistics.js';\r\nimport \"./base.css\"\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions.js';\r\nimport Notification from \"./components/Notification/Notification\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  countFeedbackHandler = event => {\r\n    const { name } = event.currentTarget;\r\n\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  }\r\n  countPositiveFeedbackPercentage = () => {\r\n    let totalFeedback = this.countTotalFeedback();\r\n    let positiveFeedback = (this.state.good * 100) / totalFeedback;\r\n    return totalFeedback !== 0 ? Math.round(positiveFeedback) : 0;\r\n  }\r\n\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={['good', 'neutral', 'bad']}\r\n            onLeaveFeedback={this.countFeedbackHandler}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total ?\r\n            (<Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\r\n            />) :\r\n            (<Notification message=\"No feedback given\" ></Notification>)\r\n          }\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__tJwit\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__-FDPx\",\"btn\":\"FeedbackOptions_btn__278q2\"};"],"sourceRoot":""}